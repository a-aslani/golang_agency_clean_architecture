// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/a-aslani/golang_agency_clean_architecture/internal/file_uploader/model/contract (interfaces: Repository)
//
// Generated by this command:
//
//	mockgen -destination mocks/repository_mock.go -package mocks github.com/a-aslani/golang_agency_clean_architecture/internal/file_uploader/model/contract Repository
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entity "github.com/a-aslani/golang_agency_clean_architecture/internal/file_uploader/model/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// SaveFilePath mocks base method.
func (m *MockRepository) SaveFilePath(arg0 context.Context, arg1 *entity.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFilePath", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveFilePath indicates an expected call of SaveFilePath.
func (mr *MockRepositoryMockRecorder) SaveFilePath(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFilePath", reflect.TypeOf((*MockRepository)(nil).SaveFilePath), arg0, arg1)
}
